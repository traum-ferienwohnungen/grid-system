{"version":3,"sources":["grid.scss","settings.scss","mixins.scss"],"names":[],"mappings":"AAGA,MACC,6BAAA,CAAA,qBAAA,CACA,gBCLiB,CDMjB,cAAA,CACA,aAAA,CACA,WAEA,kBACC,cAAA,CACA,UAIA,gCACC,oBAEA,6CACC,iBAIF,yCAEE,6CACC,iBAGD,8CACC,oBAEA,2DACC,kBAOL,WACC,6BAAA,CAAA,qBAAA,CACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,kBAAA,CAAA,cAAA,CACA,eAGC,mBEdD,wBACC,6BAAA,CAAA,4BAAA,CAAA,sBAAA,CAAA,mBAED,yBACC,6BAAA,CAAA,6BAAA,CAAA,8BAAA,CAAA,2BAED,wBACC,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,sBAED,yBACC,2BAAA,CAAA,6BAAA,CAAA,iCAAA,CAAA,+BFIA,gEE3BD,0BACC,6BAAA,CAAA,4BAAA,CAAA,sBAAA,CAAA,mBAED,2BACC,6BAAA,CAAA,6BAAA,CAAA,8BAAA,CAAA,2BAED,0BACC,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,sBAED,2BACC,2BAAA,CAAA,6BAAA,CAAA,iCAAA,CAAA,+BFiBA,yCE3BD,0BACC,6BAAA,CAAA,4BAAA,CAAA,sBAAA,CAAA,mBAED,2BACC,6BAAA,CAAA,6BAAA,CAAA,8BAAA,CAAA,2BAED,0BACC,2BAAA,CAAA,4BAAA,CAAA,yBAAA,CAAA,sBAED,2BACC,2BAAA,CAAA,6BAAA,CAAA,iCAAA,CAAA,+BFuBF,cACC,6BAAA,CAAA,qBAAA,CACA,cAAA,CACA,4BAAA,CAAA,eAAA,CACA,cAAA,CACA,YAIC,mBE9DF,iBACC,qCF+DW,CE/DX,wBF+DW,CE9DX,wBAFD,iBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,iBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,iBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,iBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,iBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,iBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,iBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,iBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,4BF+DW,CE/DX,eF+DW,CE9DX,eAUA,2BACC,WFiDA,gEE9DF,kBACC,qCF+DW,CE/DX,wBF+DW,CE9DX,wBAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,mBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,mBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,mBACC,4BF+DW,CE/DX,eF+DW,CE9DX,eAMA,6BACC,WFqDA,yCE9DF,kBACC,qCF+DW,CE/DX,wBF+DW,CE9DX,wBAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,kBACC,2BF+DW,CE/DX,cF+DW,CE9DX,cAFD,mBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,mBACC,sCF+DW,CE/DX,yBF+DW,CE9DX,yBAFD,mBACC,4BF+DW,CE/DX,eF+DW,CE9DX,eAMA,6BACC","file":"grid.css","sourceRoot":"../scss","sourcesContent":["@import \"settings\";\n@import \"mixins\";\n\n.grid {\n\tbox-sizing: border-box;\n\tmax-width: $grid-page-width;\n\tpadding: 0 ($grid-gutter-width / 2);\n\tmargin: 0 auto;\n\twidth: 100%;\n\n\t&--full-width {\n\t\tmax-width: 100%;\n\t\tpadding: 0;\n\t}\n\n\t&--spaced-evenly {\n\t\t.grid__row {\n\t\t\tpadding-bottom: $grid-gutter-width;\n\n\t\t\t&:last-of-type {\n\t\t\t\tpadding-bottom: 0;\n\t\t\t}\n\t\t}\n\n\t\t@media #{$device-small} {\n\t\t\t.grid__row {\n\t\t\t\t&:last-of-type {\n\t\t\t\t\tpadding-bottom: 0;\n\t\t\t\t}\n\n\t\t\t\t.grid__column {\n\t\t\t\t\tpadding-bottom: $grid-gutter-width;\n\n\t\t\t\t\t&:last-of-type {\n\t\t\t\t\t\tpadding-bottom: 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t&__row {\n\t\tbox-sizing: border-box;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tmargin: 0 ($grid-gutter-width / -2);\n\n\t\t@each $size, $dimensions in $screen-sizes {\n\t\t\t@media #{$dimensions} {\n\t\t\t\t@include create-flex-direction($size);\n\t\t\t}\n\t\t}\n\t}\n\n\t&__column {\n\t\tbox-sizing: border-box;\n\t\tpadding: 0 ($grid-gutter-width / 2);\n\t\tflex-basis: 100%;\n\t\tmax-width: 100%;\n\t\tmin-width: 0; // crucial for even column distribution without defining column count!\n\n\t\t@each $size, $dimensions in $screen-sizes {\n\n\t\t\t@media #{$dimensions} {\n\t\t\t\t@for $i from 1 through $grid-columns {\n\t\t\t\t\t$width: percentage($grid-column-width * $i);\n\n\t\t\t\t\t@include create-column($size, $i, $width);\n\t\t\t\t}\n\n\t\t\t\t@include create-paddingless-option($size);\n\t\t\t}\n\t\t}\n\t}\n}\n","$grid-page-width: 1276px;\n$grid-page-width-small: 1060px;\n$grid-gutter-width: 20px;\n$grid-columns: 12;\n$grid-column-width: (100 / $grid-columns) / 100;\n\n$column-prefix-small: s;\n$column-prefix-medium: m;\n\n$device-screen: \"only screen\";\n$device-medium: \"#{$device-screen} and (min-width: 768px) and (max-width: 1023px)\";\n$device-small: \"#{$device-screen} and (max-width: 767px)\";\n\n$screen-sizes: (null, $device-screen), ($column-prefix-medium, $device-medium), ($column-prefix-small, $device-small);\n","@mixin create-column($device, $i, $width) {\n\t&--#{$device}#{$i} {\n\t\tflex-basis: $width;\n\t\tmax-width: $width;\n\t}\n}\n\n@mixin create-paddingless-option($device) {\n\t@if ($device) {\n\t\t&--#{$device}-paddingless {\n\t\t\tpadding: 0;\n\t\t}\n\t} @else {\n\t\t&--paddingless {\n\t\t\tpadding: 0;\n\t\t}\n\t}\n}\n\n@mixin create-flex-direction($device) {\n\t@if ($device) {\n\t\t&--#{$device}-direction-r {\n\t\t\tflex-direction: row;\n\t\t}\n\t\t&--#{$device}-direction-rr {\n\t\t\tflex-direction: row-reverse;\n\t\t}\n\t\t&--#{$device}-direction-c {\n\t\t\tflex-direction: column;\n\t\t}\n\t\t&--#{$device}-direction-cr {\n\t\t\tflex-direction: column-reverse;\n\t\t}\n\t} @else {\n\t\t&--direction-r {\n\t\t\tflex-direction: row;\n\t\t}\n\t\t&--direction-rr {\n\t\t\tflex-direction: row-reverse;\n\t\t}\n\t\t&--direction-c {\n\t\t\tflex-direction: column;\n\t\t}\n\t\t&--direction-cr {\n\t\t\tflex-direction: column-reverse;\n\t\t}\n\t}\n}\n"]}